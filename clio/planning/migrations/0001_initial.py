# Generated by Django 5.2 on 2025-04-12 03:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('scripts', '0005_alter_script_workflows'),
        ('systems', '0001_initial'),
        ('workflows', '0003_convert_to_node_based'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Initiative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('proposed', 'Proposed'), ('approved', 'Approved'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='proposed', max_length=20)),
                ('priority', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='medium', max_length=10)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('target_completion_date', models.DateField(blank=True, null=True)),
                ('actual_completion_date', models.DateField(blank=True, null=True)),
                ('budget_allocation', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('resource_requirements', models.TextField(blank=True)),
                ('business_justification', models.TextField(blank=True)),
                ('success_criteria', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dependencies', models.ManyToManyField(blank=True, related_name='dependent_initiatives', to='planning.initiative')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_initiatives', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('approved', 'Approved'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('initiative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='planning.initiative')),
            ],
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('missed', 'Missed'), ('canceled', 'Canceled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dependencies', models.ManyToManyField(blank=True, related_name='dependent_milestones', to='planning.milestone')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='planning.plan')),
            ],
        ),
        migrations.CreateModel(
            name='RiskRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('likelihood', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], max_length=10)),
                ('impact', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], max_length=10)),
                ('mitigation_strategy', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('identified', 'Identified'), ('mitigating', 'Mitigating'), ('monitoring', 'Monitoring'), ('resolved', 'Resolved'), ('accepted', 'Accepted')], default='identified', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initiative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risks', to='planning.initiative')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('blocked', 'Blocked'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='not_started', max_length=20)),
                ('priority', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='medium', max_length=10)),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('milestone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='planning.milestone')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='planning.plan')),
                ('scripts', models.ManyToManyField(blank=True, related_name='related_tasks', to='scripts.script')),
                ('systems', models.ManyToManyField(blank=True, related_name='related_tasks', to='systems.system')),
                ('workflows', models.ManyToManyField(blank=True, related_name='related_tasks', to='workflows.workflow')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=100)),
                ('allocation_percentage', models.DecimalField(decimal_places=2, help_text='Percentage of time allocated to this project', max_digits=5)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('cost_center', models.CharField(blank=True, max_length=100)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initiative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resource_allocations', to='planning.initiative')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resource_allocations', to='planning.plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_allocations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('initiative__isnull', False), ('plan__isnull', False), _connector='OR'), name='resource_must_be_allocated_to_initiative_or_plan')],
            },
        ),
        migrations.CreateModel(
            name='PlanningDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('document', models.FileField(upload_to='planning_documents/')),
                ('document_type', models.CharField(choices=[('requirements', 'Requirements'), ('design', 'Design Document'), ('review', 'Review Document'), ('approval', 'Approval Document'), ('report', 'Report'), ('meeting_notes', 'Meeting Notes'), ('other', 'Other')], max_length=20)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'In Review'), ('approved', 'Approved'), ('superseded', 'Superseded')], default='draft', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_planning_documents', to=settings.AUTH_USER_MODEL)),
                ('initiative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='planning.initiative')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='planning.plan')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='planning.task')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('initiative__isnull', False), ('plan__isnull', False), ('task__isnull', False), _connector='OR'), name='document_must_be_attached_to_initiative_plan_or_task')],
            },
        ),
    ]
